{"version":3,"file":"main.js","mappings":"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","sources":["webpack://portuguese_oceanic_trade_routes_data_visualization/./src/scripts/trade.js","webpack://portuguese_oceanic_trade_routes_data_visualization/./src/scripts/world.js","webpack://portuguese_oceanic_trade_routes_data_visualization/./src/scripts/rangeSlider.js","webpack://portuguese_oceanic_trade_routes_data_visualization/./src/scripts/barChart.js","webpack://portuguese_oceanic_trade_routes_data_visualization/./src/index.js"],"sourcesContent":["const ORIGIN = \"Portugal\";\n\nclass Trade {\n    constructor(partner, year, tradeFlow, productGroup, amount){\n        this.origin = ORIGIN;\n        this.partner = partner.trim();\n        this.year = parseInt(year.trim());\n        this.tradeFlow = tradeFlow.trim();\n        this.productGroup = productGroup.trim();\n        this.amount = parseFloat(amount.trim());\n    }\n\n    toHTML() {\n        return `<ul>\n                    <li>In ${this.year}</li>\n                    <li>${this.productGroup}</li>\n                    <li>${this.tradeFlow} ${this.tradeFlow === 'Export' ? 'to' : 'from'} ${this.partner}</li>\n                    <li>Trade Amount $${(this.amount * 1000).toLocaleString(\"en-US\")}</li>\n                </ul>`;\n    }\n}\n\nexport function getOrigin(){\n    return ORIGIN;\n}\n\nexport default Trade;","import Trade, { getOrigin } from \"./trade.js\";\nimport RangeSlider from \"./rangeSlider.js\";\n\nconst WIDTH = 900;\nconst HEIGHT = 600;\nconst WORLD_MAP_URL = 'https://cdn.jsdelivr.net/npm/world-atlas@2/countries-110m.json';\nconst TRADES_URL = \"https://qyhappacademy.github.io/portugal_trade_data_visualization/data/all_products.json\";\n\nclass World {\n    constructor(tradeURL) {\n        this.tradeURL = tradeURL;\n        this.width = WIDTH;\n        this.height = HEIGHT;\n\n        this.svg = d3.select('#world')\n            .append('svg')\n            .attr('width', this.width)\n            .attr('height', this.height)\n            .append(\"g\");\n\n        this.projection = d3.geoMercator()\n            .translate([this.width / 2, this.height / 1.5])\n            .scale(144);\n\n        this.path = d3.geoPath().projection(this.projection);\n\n        this.worldMap = this._fetchWorldMap();\n\n        this.trades = this._fetchTrades();\n    }\n\n    // reset(tradeURL){\n    //     this.tradeURL = tradeURL;\n    //     this.worldMap = this._fetchWorldMap();\n    //     this.trades = this._fetchTrades();\n\n    //     d3.selectAll(\".country\")\n    //         .each(function (country, i) {\n    //             d3.select(this).classed(\"selected-top-10\", false);\n    //             d3.select(this).classed(\"selected-by-range\", false);\n    //             d3.select(this).classed(\"selected-by-range-top-10\", false);\n    //         });\n    // }\n\n    render(){\n        this.worldMap\n            .then((world) => {\n                let that = this;\n\n                let countries = topojson.feature(world, world.objects.countries).features;\n\n                this.trades.then(function(trades) {\n                    that.svg.selectAll(\".country\")\n                        .data(countries)\n                        .enter()\n                        .append(\"path\")\n                        .attr(\"class\", \"country\")\n                        .attr(\"d\", that.path)\n                        .on('mouseover', function (country) {\n                            that.mouseOverCountry(country, this, trades);\n                        })\n                        .on('mousemove', function (country) {\n                            that.mouseMove(country, this);\n                        })\n                        .on('mouseout', function (country) {\n                            that.mouseOutCountry(country, this);\n                        });\n\n                    const top10TradePartners = trades.slice(0, 10).map(trade => trade.partner);\n                    that._renderTradePartners(top10TradePartners);\n\n                    that.rangeSlider = new RangeSlider(trades);\n                    that.rangeSlider.render();\n                });\n            });\n    }\n\n    mouseOverCountry(country, context, trades){\n        d3.select(context)\n            .classed(\"mouseover\", true)\n            .style(\"display: block\");\n\n        const name = country.properties.name;\n\n        for (let i = 0; i < trades.length; i++) {\n            const trade = trades[i];\n            if (trade.partner === name) {\n                d3.select(\"#world-tooltip\")\n                    .style(\"display\", \"inline\")\n                    // .style(\"left\", (d3.event.pageX) + \"px\")\n                    // .style(\"top\", (d3.event.pageY) + \"px\")\n                    .insert(\"div\")\n                    .classed(\"world-tooltip-content\", true);\n\n                d3.select(\".world-tooltip-content\")\n                    .html(trade.toHTML());\n\n                break;\n            }\n        }\n    }\n\n    mouseOutCountry(country, context){\n        d3.select(context)\n            .classed(\"mouseover\", false)\n            .style(\"display: none\");\n\n        d3.select(\"#world-tooltip\")\n            .style(\"display\", \"none\");\n\n        d3.selectAll(\".world-tooltip-content\").remove();\n    }\n    \n    mouseMove(country, context){\n        d3.select(\"#world-tooltip\")\n            .style(\"left\", (d3.mouse(context)[0] + 30) + \"px\")\n            .style(\"top\", (d3.mouse(context)[1] + 150) + \"px\");\n    }\n\n    async _fetchWorldMap() {\n        return await d3.json(WORLD_MAP_URL);\n    }\n\n    async _fetchTrades() {\n        const trades = await d3.json(this.tradeURL);\n        const result = [];\n        return this.worldMap.then((world) => {\n            let countries = topojson\n                                .feature(world, world.objects.countries)\n                                .features\n                                .map((feature)=>{\n                                    return feature.properties.name;\n                                });\n            trades.Partner.forEach(trade => {\n                const partner = trade[\"Partner Name\"].trim();\n                const matchedPartner = countries.find((country) => {\n                    if(country.includes(partner) || partner.includes(country)){\n                        return country;\n                    }\n                });\n                if (matchedPartner !== undefined){\n                    let tradeAmount = trade[\"Export (US$ Thousand)\"] || trade[\"Import (US$ Thousand)\"];\n                    result.push(new Trade(\n                        matchedPartner,\n                        trade[\"Year\"],\n                        trade[\"Trade Flow\"],\n                        trade[\"Product Group\"],\n                        tradeAmount));\n                }\n            });\n            result.sort(function (left, right) {\n                if (left.amount < right.amount) {\n                    return 1;\n                }\n                else if (left.amount > right.amount) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            });\n            return result;\n        });\n    }\n\n    _renderTradePartners(partners) {\n        d3.selectAll(\".country\")\n            .each(function (country, i) {\n                const name = country.properties.name;\n                if (partners.some(function (partner) {\n                    return partner === name;\n                })) {\n                    d3.select(this).classed(\"selected-top-10\", true);\n                }\n                if (name === getOrigin()){\n                    d3.select(this).classed(\"origin\", true);\n                }\n            });\n    }\n}\n\nexport default World;","import BarChart from \"./barChart.js\";\n\nconst SLIDER_WIDTH = 935;\nconst SLIDER_COLOR = '#5c9946';\n\nconst CONTAINER_WIDTH = 1000;\nconst CONTAINER_HEIGHT = 90;\n\nclass RangeSlider {\n    constructor(trades){\n        this.trades = trades;\n\n        const top10thTradeAmount = Math.ceil(this.trades[10].amount);\n        \n        this.range = [0, top10thTradeAmount];\n\n        this.barChart = new BarChart(this.trades, this.range);\n\n        let that = this;\n        this.slider = d3\n            .sliderBottom()\n            .min(d3.min(this.range))\n            .max(d3.max(this.range))\n            .width(SLIDER_WIDTH)\n            .tickFormat(d3.format(',.0f'))\n            .ticks(10)\n            .default([this.range[0], this.range[1]])\n            .handle(\n                d3.symbol()\n                    .type(d3.symbolCircle)\n                    .size(200)\n            )\n            .fill(SLIDER_COLOR)\n            .on('onchange', function(range){\n                that.range = range;\n\n                that._renderTradePartnersWithinRange();\n\n                that.barChart.render(range);\n            });\n\n        this.gRange = d3\n            .select('#range-slider')\n            .append('svg')\n            .attr('width', CONTAINER_WIDTH)\n            .attr('height', CONTAINER_HEIGHT)\n            .append('g')\n            .attr('transform', 'translate(30,30)');\n    }\n\n    render(){\n        this.gRange.call(this.slider);\n\n        d3.select('p#value-range').text(\n            this.slider\n                .value()\n                .map(d3.format(',.0f'))\n                .join('-')\n        );\n    }\n\n    _renderTradePartnersWithinRange(){\n        d3.selectAll(\".country\").classed(\"selected-by-range-top-10\", false);\n        d3.selectAll(\".country\").classed(\"selected-by-range\", false);\n        const countries = d3.selectAll(\".country\");\n        const selected = [];\n        this.trades.forEach(trade => {\n            if (this.range[0] <= trade.amount && trade.amount <= this.range[1]) {\n                countries.each(function(country, i) {\n                    const name = country.properties.name;\n                    if (trade.partner === name) {\n                        selected.push(this);\n                    }\n                });\n            }\n        });\n        selected.forEach((el, idx) => {\n            if (idx < 10){\n                d3.select(el).classed(\"selected-by-range-top-10\", true);\n            }else{\n                d3.select(el).classed(\"selected-by-range\", true);\n            }\n        });\n    }\n}\n\nexport default RangeSlider;","const WIDTH = 900;\nconst HEIGHT = 450;\nconst BAR_COLOR = \"#ffa876\";\n\nclass BarChart{\n    constructor(trades, range){\n        this.trades = trades;\n\n        this.range = range;\n\n        this.margin = { top: 20, right: 90, bottom: 80, left: 180 };\n\n        this.width = WIDTH - this.margin.left - this.margin.right;\n        this.height = HEIGHT - this.margin.top - this.margin.bottom;\n    }\n\n    render(range){\n        d3.select(\"#bar-chart\").select(\"svg\").remove();\n        this.svg = d3.select(\"#bar-chart\")\n            .append(\"svg\")\n            .attr(\"width\", WIDTH)\n            .attr(\"height\", HEIGHT)\n            .append(\"g\")\n            .attr(\"transform\", `translate(${this.margin.left}, ${this.margin.top})`)\n\n        this.range = range;\n\n        const tradesWithinRange = this.trades.filter(trade => {\n            return this.range[0] <= trade.amount && trade.amount <= this.range[1];\n        });\n\n        const trades = tradesWithinRange.map(trade => {\n            return {\n                partner: trade.partner,\n                amount: trade.amount\n            };\n        });\n\n        trades.sort(function(left, right) {\n            if (left.amount < right.amount) {\n                return 1;\n            }\n            else if (left.amount > right.amount) {\n                return -1;\n            }\n            else {\n                return 0;\n            }\n        });\n\n        const top10Trades = trades.length > 10 ? trades.slice(0, 10) : trades;\n        \n        // X axis\n        const x = d3.scaleLinear()\n            .domain([0, this.range[1]])\n            .range([0, this.width]);\n\n        this.svg.append(\"g\")\n            .attr(\"transform\", `translate(0, ${this.height})`)\n            .call(d3.axisBottom(x))\n            .selectAll(\"text\")\n            .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n            .style(\"text-anchor\", \"end\")\n            .style(\"font-size\", \"13px\");\n\n        // Y axis\n        const y = d3.scaleBand()\n            .range([0, this.height])\n            .domain(top10Trades.map(trade => trade.partner))\n            .padding(.4);\n\n        this.svg.append(\"g\")\n            .call(d3.axisLeft(y))\n            .style(\"font-size\", \"15px\");\n\n        // Bars with animation\n        this.svg.selectAll(\"myRect\")\n            .data(top10Trades)\n            .join(\"rect\")\n            .attr(\"x\", x(0))\n            .attr(\"y\", trade => y(trade.partner))\n            .attr(\"width\", 0)\n            .transition()\n            .duration(1000)\n            .delay(function (trade, i) { return i * 50 })\n            .attr(\"width\", trade => x(trade.amount))\n            .attr(\"height\", y.bandwidth())\n            .attr(\"fill\", BAR_COLOR);\n        \n        // Chart Label\n        this.svg.append('text')\n            .attr('x', this.width / 2)\n            .attr('y', this.height + 70)\n            .attr('text-anchor', 'middle')\n            .text('Trade Amount (US$ Thousand)');\n    }\n}\n\nexport default BarChart;","import World from \"./scripts/world.js\";\n\nconst EXPORT_URL = \"https://qyhappacademy.github.io/portugal_trade_data_visualization/data/exports.json\";\nconst IMPORT_URL = \"https://qyhappacademy.github.io/portugal_trade_data_visualization/data/imports.json\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n    createUserGuide()\n    let world = new World(IMPORT_URL);\n    world.render();\n\n    const toggleBtn = document.getElementById(\"toggle-trade-button\");\n    toggleBtn.addEventListener(\"click\", (event) => {\n        event.preventDefault();\n        \n        toggleBtn.children[0].children[0].innerText = world.tradeURL === EXPORT_URL ? \"To Exports\" : \"To Imports\";\n        \n        reset();\n        \n        world = world.tradeURL === EXPORT_URL ? new World(IMPORT_URL) : new World(EXPORT_URL);\n        world.render();\n\n        // world = world.tradeURL === EXPORT_URL ? new World(IMPORT_URL) : new World(EXPORT_URL);\n        // reset(world);\n    });\n});\n\nfunction reset() {\n    document.getElementById(\"world\").innerHTML = \"\";\n    document.getElementById(\"world-tooltip\").innerHTML = \"\";\n    document.getElementById(\"range-slider\").innerHTML = \"\";\n    document.getElementById(\"bar-chart\").innerHTML = \"\";\n}\n\nfunction createUserGuide(){\n    const userGuide = document.getElementById(\"user-guide-modal\");\n\n    // Get the button that opens the user guide\n    document.getElementById(\"user-guide-button\")\n        .addEventListener(\"click\", (event) => {\n            event.preventDefault();\n            userGuide.style.display = \"block\";\n        });\n\n    // Get the <span> element that closes the user guide\n    document.getElementsByClassName(\"close\")[0]\n        .addEventListener(\"click\", (event) => {\n            event.preventDefault();\n            userGuide.style.display = \"none\";\n        });\n\n    // When the user clicks anywhere outside of the user guide, close it\n    window.addEventListener(\"click\", (event) => {\n        // event.preventDefault();\n        if (event.target == userGuide) {\n            userGuide.style.display = \"none\";\n        }\n    });\n}\n\n// function reset(world){\n//     document.getElementById(\"world-tooltip\").innerHTML = \"\";\n//     document.getElementById(\"range-slider\").innerHTML = \"\";\n//     document.getElementById(\"bar-chart\").innerHTML = \"\";\n\n//     world.reset(world.tradeURL === EXPORT_URL ? IMPORT_URL : EXPORT_URL);\n// }"],"names":["ORIGIN","constructor","tradeURL","this","width","height","svg","d3","select","append","attr","projection","geoMercator","translate","scale","path","geoPath","worldMap","_fetchWorldMap","trades","_fetchTrades","render","then","world","that","countries","topojson","feature","objects","features","selectAll","data","enter","on","country","mouseOverCountry","mouseMove","mouseOutCountry","top10TradePartners","slice","map","trade","partner","_renderTradePartners","rangeSlider","top10thTradeAmount","Math","ceil","amount","range","barChart","margin","top","right","bottom","left","remove","filter","sort","top10Trades","length","x","scaleLinear","domain","call","axisBottom","style","y","scaleBand","padding","axisLeft","join","transition","duration","delay","i","bandwidth","text","slider","sliderBottom","min","max","tickFormat","format","ticks","default","handle","symbol","type","symbolCircle","size","fill","_renderTradePartnersWithinRange","gRange","value","classed","selected","forEach","each","name","properties","push","el","idx","context","insert","html","toHTML","mouse","async","json","result","Partner","trim","matchedPartner","find","includes","undefined","tradeAmount","year","tradeFlow","productGroup","origin","parseInt","parseFloat","toLocaleString","partners","some","EXPORT_URL","IMPORT_URL","document","addEventListener","userGuide","getElementById","event","preventDefault","display","getElementsByClassName","window","target","createUserGuide","World","toggleBtn","children","innerText","innerHTML"],"sourceRoot":""}